name: Security Checks

on:
  pull_request:
    branches:
      - '**'

jobs:
  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm' # Cache npm dependencies

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: audit
        run: |
          npm audit --audit-level=high || echo "Audit completed with issues."
      - name: Display audit results
        if: steps.audit.outcome == 'failure'
        run: |
          echo "npm audit detected vulnerabilities. Please review the issues above."

      - name: Scan for Secrets
        uses: yochannah/codeql-secrets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Code Scanning (CodeQL)
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: 'security'
          output: 'results.sarif'

      # Dependency Review (Optional)
      - name: Dependency Review
        if: github.event_name == 'pull_request'
        uses: advanced-security/dependency-review-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


# name: Security Audit & Dependency Check

# on:
#   pull_request:
#     branches:
#       - '**'

# jobs:
#   security:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Cache dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             npm-${{ runner.os }}-

#       - name: Install Root Dependencies
#         run: npm ci --prefer-offline --no-audit

#       - name: Run Security Audit in All Workspaces
#         run: |
#           for workspace in $(node -e "console.log(require('./package.json').workspaces.join(' '))"); do
#             echo "Auditing workspace $workspace"
#             npm audit --prefix=$workspace --groups dependencies --severity critical || true
#           done
