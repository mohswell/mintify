name: Security Checks

on:
  pull_request:
    branches:
      - '**'

jobs:
  security:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: audit
        run: |
          npm audit --audit-level=high || echo "::warning ::npm audit detected vulnerabilities"

      # Initialize CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript  # This covers both JavaScript and TypeScript
          queries: security-and-quality  # Add security and quality queries

      # Autobuild (attempts to build any compiled languages)
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      # Run CodeQL Analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript,/language:typescript" 
          ram: '6000'  # Increase RAM for larger codebases

      # Dependency Review using official GitHub action
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        if: github.event_name == 'pull_request'
        with:
          fail-on-severity: high

      # Check for secrets using gitleaks
      - name: Check for secrets
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload security results
      - name: Upload security results
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: results.sarif

# name: Security Audit & Dependency Check

# on:
#   pull_request:
#     branches:
#       - '**'

# jobs:
#   security:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: 18

#       - name: Cache dependencies
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           key: npm-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             npm-${{ runner.os }}-

#       - name: Install Root Dependencies
#         run: npm ci --prefer-offline --no-audit

#       - name: Run Security Audit in All Workspaces
#         run: |
#           for workspace in $(node -e "console.log(require('./package.json').workspaces.join(' '))"); do
#             echo "Auditing workspace $workspace"
#             npm audit --prefix=$workspace --groups dependencies --severity critical || true
#           done
