name: Publish Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build the monorepo project
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
        run: npm run build

      - name: Ensure .next directory exists in apps/web
        run: |
          if [ ! -d "apps/web/.next" ]; then
            echo "apps/web/.next directory does not exist. Ensure the build step completes successfully."
            exit 1
          fi

      - name: Calculate Release Version
        id: version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0")
          latest_version=${latest_tag#v}
          major=$(echo "$latest_version" | cut -d. -f1)
          minor=$(echo "$latest_version" | cut -d. -f2)
          new_minor=$((minor + 1))
          new_version="${major}.${new_minor}"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        id: create_release
        with:
          tag_name: v${{ env.new_version }}
          name: Release v${{ env.new_version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug Create Release Outputs
        run: |
          echo "Upload URL: ${{ steps.create_release.outputs.upload_url }}"
          echo "Release ID: ${{ steps.create_release.outputs.id }}"

      - name: Create artifact for apps/web
        run: tar -czvf artifact.tar.gz apps/web/.next

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact.tar.gz
          asset_name: artifact.tar.gz
          asset_content_type: application/gzip